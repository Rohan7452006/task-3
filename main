# ===========================
# 1. Import Libraries
# ===========================
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
from sklearn.preprocessing import LabelEncoder

# ===========================
# 2. Load & Preprocess Data
# ===========================
file_path = "/mnt/data/Titanic-Dataset.csv"
df = pd.read_csv(file_path)

# Fill missing Age and Fare with median
df['Age'].fillna(df['Age'].median(), inplace=True)
df['Fare'].fillna(df['Fare'].median(), inplace=True)

# Encode categorical variable 'Sex'
le = LabelEncoder()
df['Sex'] = le.fit_transform(df['Sex'])

# Select features and target
X = df[['Age', 'Pclass', 'SibSp', 'Parch', 'Sex']]
y = df['Fare']

# ===========================
# 3. Train-Test Split
# ===========================
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# ===========================
# 4. Fit Linear Regression
# ===========================
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# ===========================
# 5. Evaluate Model
# ===========================
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Absolute Error:", mae)
print("Mean Squared Error:", mse)
print("RÂ² Score:", r2)
print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)

# ===========================
# 6. Plot Regression (Age vs Fare example)
# ===========================
plt.scatter(X_test['Age'], y_test, color='blue', label='Actual')
plt.scatter(X_test['Age'], y_pred, color='red', label='Predicted')
plt.xlabel("Age")
plt.ylabel("Fare")
plt.title("Age vs Fare (Linear Regression Predictions)")
plt.legend()
plt.show()
